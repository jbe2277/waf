# Version samples
#
# minver          | version   | versionCode
# ----------------|-----------|------------
# 7.0.0-alpha.38  | 7.0.00038  | 70000038
# 7.0.0           | 7.0.09990  | 70009990
# 7.1.2-alpha.9   | 7.1.20009  | 70120009
# 7.1.2           | 7.1.29990  | 70129990
# 8.0.3-beta.2.56 | 8.0.32056  | 80032056
# 8.0.3           | 8.0.39990  | 80039990

name: 'GetBuildVersion'

on:
  workflow_call:
    outputs:
      version:
        description: "Build version in format {major.minor.build}"
        value: ${{ jobs.getVersionJob.outputs.version }}
      versionCode:
        description: "Build version as single integer with {major minor:2 build:4}"
        value: ${{ jobs.getVersionJob.outputs.versionCode }}

jobs:
  getVersionJob:
    name: 'Get Build Version'
    runs-on: windows-latest
    outputs:
      version: ${{ steps.getVersionStep.outputs.version }}
      versionCode: ${{ steps.getVersionStep.outputs.versionCode }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install MinVer
        run: |
          dotnet tool install minver-cli -g
      - id: getVersionStep
        name: Get Build Version
        shell: pwsh
        run: |
          $verOut=minver -t v
          $metaSplit=$verOut.Split('+', 2)
          $preSplit=$metaSplit[0].Split('-', 2)
          $rtmSplit=$preSplit[0].Split('.')
          $heightSplit=$preSplit[1]?.Split('.') ?? @("", "9990")
          $build=$rtmSplit[2] + ($heightSplit.Count -ge 3 ? $heightSplit[1] + $heightSplit[2].PadLeft(3, '0') : $heightSplit[1].PadLeft(4, '0'))
          $version = [string]::Format("{0}.{1}.{2}", $rtmSplit[0], $rtmSplit[1], $build)
          $versionCode = [string]::Format("{0}{1}{2}", $rtmSplit[0], $rtmSplit[1].PadLeft(2, '0'), $build)
          "version=$version" >> $Env:GITHUB_OUTPUT
          "versionCode=$versionCode" >> $Env:GITHUB_OUTPUT
          "version=$version"
          "versionCode=$versionCode"
